/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely'

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>

export type Timestamp = ColumnType<Date, Date | string, Date | string>

export interface Comment {
  content: string
  id: Generated<number>
}

export interface PostRequests {
  adminId: number | null
  content: string
  createdAt: Generated<Timestamp | null>
  id: Generated<number>
  requestedBy: number | null
  status: Generated<string | null>
  title: string
  updatedAt: Generated<Timestamp | null>
}

export interface Posts {
  authorId: number | null
  content: string
  createdAt: Generated<Timestamp | null>
  id: Generated<number>
  title: string
  updatedAt: Generated<Timestamp | null>
}

export interface Reports {
  createdAt: Generated<Timestamp | null>
  id: Generated<number>
  postId: number | null
  reason: string | null
  reportedBy: number | null
  updatedAt: Generated<Timestamp | null>
}

export interface Users {
  createdAt: Generated<Timestamp | null>
  email: string
  id: Generated<number>
  password: string
  role: Generated<string>
  updatedAt: Generated<Timestamp | null>
  username: string
}

export interface DB {
  comment: Comment
  postRequests: PostRequests
  posts: Posts
  reports: Reports
  users: Users
}
